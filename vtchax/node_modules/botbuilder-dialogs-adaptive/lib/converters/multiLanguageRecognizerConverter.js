"use strict";
/**
 * @module botbuilder-dialogs-adaptive
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultiLanguageRecognizerConverter = void 0;
const recognizerConverter_1 = require("./recognizerConverter");
/**
 * Language generator converter that implements [Converter](xref:botbuilder-dialogs-declarative.Converter).
 */
class MultiLanguageRecognizerConverter {
    /**
     * Initializes a new instance of the [MultiLanguageRecognizerConverter](xref:botbuilder-dialogs-adaptive.MultiLanguageRecognizerConverter) class.
     *
     * @param resourceExplorer Resource explorer to use for resolving references.
     */
    constructor(resourceExplorer) {
        this._recognizerConverter = new recognizerConverter_1.RecognizerConverter(resourceExplorer);
    }
    /**
     * @param value An [Input](xref:botbuilder-dialogs-adaptive.Input) or [Output](xref:botbuilder-dialogs-adaptive.Output).
     * @returns A new [Output](xref:botbuilder-dialogs-adaptive.Output) instance.
     */
    convert(value) {
        return Object.entries(value).reduce((recognizers, [key, value]) => {
            return Object.assign(Object.assign({}, recognizers), { [key]: this._recognizerConverter.convert(value) });
        }, {});
    }
}
exports.MultiLanguageRecognizerConverter = MultiLanguageRecognizerConverter;
//# sourceMappingURL=multiLanguageRecognizerConverter.js.map