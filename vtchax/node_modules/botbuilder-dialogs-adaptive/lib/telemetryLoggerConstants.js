"use strict";
/**
 * @module botbuilder-dialogs-adaptive
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TelemetryLoggerConstants = void 0;
/**
 * Defines names of common adaptive dialog events for use with a [BotTelemetryClient](xref:botbuilder-core.BotTelemetryClient) object.
 */
class TelemetryLoggerConstants {
}
exports.TelemetryLoggerConstants = TelemetryLoggerConstants;
/**
 * The generic name of the event when a binding completes. When this event is logged, the context property will contain a more descriptive constant.
 */
TelemetryLoggerConstants.GeneratorResultEvent = 'GeneratorResult';
/**
 * The name of the event when an adaptive dialog trigger occurs.
 */
TelemetryLoggerConstants.TriggerEvent = 'AdaptiveDialogTrigger';
/**
 * The name of the event when an adaptive dialog complete occurs.
 */
TelemetryLoggerConstants.CompleteEvent = 'AdaptiveDialogComplete';
/**
 * The name of the event when an adaptive dialog cancel occurs.
 */
TelemetryLoggerConstants.DialogCancelEvent = 'AdaptiveDialogCancel';
/**
 * The name of the event when an adaptive dialog start occurs.
 */
TelemetryLoggerConstants.DialogStartEvent = 'AdaptiveDialogStart';
/**
 * The name of the event when an adaptive dialog action occurs.
 */
TelemetryLoggerConstants.DialogActionEvent = 'AdaptiveDialogAction';
/**
 * The name of the event when a Log Action result occurs.
 */
TelemetryLoggerConstants.LogActionResultEvent = 'LogActionResult';
/**
 * The name of the event when a Sent Activity result occurs.
 */
TelemetryLoggerConstants.SendActivityResultEvent = 'SendActivityResult';
/**
 * The name of the event when an Update Activity result occurs.
 */
TelemetryLoggerConstants.UpdateActivityResultEvent = 'UpdateActivityResult';
/**
 * The name of the event when an Input result occurs.
 */
TelemetryLoggerConstants.InputDialogResultEvent = 'InputDialogResult';
/**
 * The name of the event when an OAuth Input result occurs.
 */
TelemetryLoggerConstants.OAuthInputResultEvent = 'OAuthInputResult';
/**
 * The name of the event when a cross trained recognizer set result occurs.
 */
TelemetryLoggerConstants.CrossTrainedRecognizerSetResultEvent = 'CrossTrainedRecognizerSetResult';
/**
 * The name of the event when a multi language recognizer result occurs.
 */
TelemetryLoggerConstants.MultiLanguageRecognizerResultEvent = 'MultiLanguageRecognizerResult';
/**
 * The name of the event when a recognizer set result occurs.
 */
TelemetryLoggerConstants.RecognizerSetResultEvent = 'RecognizerSetResult';
/**
 * The name of the event when a regex recognizer result occurs.
 */
TelemetryLoggerConstants.RegexRecognizerResultEvent = 'RegexRecognizerResult';
/**
 * The name of the event when a value recognizer result occurs.
 */
TelemetryLoggerConstants.ValueRecognizerResultEvent = 'ValueRecognizerResult';
//# sourceMappingURL=telemetryLoggerConstants.js.map