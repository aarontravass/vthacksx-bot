import { BotFrameworkAuthentication } from 'botframework-connector';
import { MemoryScope, PathResolver } from 'botbuilder-dialogs';
import { ResourceExplorer } from 'botbuilder-dialogs-declarative';
import { ActivityHandler, BotTelemetryClient, ConversationState, SkillConversationIdFactoryBase, UserState } from 'botbuilder';
/**
 * Implements an instance of CoreBot.
 */
export declare class CoreBot extends ActivityHandler {
    /**
     * @param resourceExplorer Services to access resources.
     * @param userState Stored user state.
     * @param conversationState Stored conversation state.
     * @param botFrameworkAuthentication Cloud environment to authenticate Bot Framework Protocol network calls within this environment.
     * @param skillConversationIdFactory Methods to create unique conversation IDs for skill conversations.
     * @param botTelemetryClient Bot client to telemetry.
     * @param defaultLocale The default locale used to determine language-specific behavior.
     * @param defaultRootDialog Default bot root dialog.
     * @param memoryScopes Named root-level objects, which can exist in the dialog context or outside the turn state.
     * @param pathResolvers Shortcut behavior for transform paths.
     */
    constructor(resourceExplorer: ResourceExplorer, userState: UserState, conversationState: ConversationState, botFrameworkAuthentication: BotFrameworkAuthentication, skillConversationIdFactory: SkillConversationIdFactoryBase, botTelemetryClient: BotTelemetryClient, defaultLocale: string, defaultRootDialog: string, memoryScopes: MemoryScope[], pathResolvers: PathResolver[]);
}
//# sourceMappingURL=coreBot.d.ts.map